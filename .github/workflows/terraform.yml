name: Terraform CI/CD

on:
  push:
    paths:
      - 'terraform/**'
  pull_request:
    paths:
      - 'terraform/**'

env:
  TERRAFORM_VERSION_FILE: .terraform-version

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read Terraform version
        id: tfversion
        run: echo "::set-output name=version::$(cat ${{ env.TERRAFORM_VERSION_FILE }})"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ steps.tfversion.outputs.version }}

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform code
        run: terraform validate

  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" >> ~/.aws/credentials
          echo "aws_access_key_id=${{ env.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ env.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          chmod 600 ~/.aws/credentials

      - name: Install TFLint
        run: curl -L -o /usr/local/bin/tflint https://github.com/terraform-linters/tflint/releases/latest/download/tflint_linux_amd64 && chmod +x /usr/local/bin/tflint

      - name: Run TFLint
        run: tflint

  deploy:
    needs: [validate, scan]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read Terraform version
        id: tfversion
        run: echo "::set-output name=version::$(cat ${{ env.TERRAFORM_VERSION_FILE }})"        

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ steps.tfversion.outputs.version }}

      - name: Apply Terraform changes
        run: terraform apply -auto-approve
